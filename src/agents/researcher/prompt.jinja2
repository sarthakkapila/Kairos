For the provided step-by-step plan, write all the necessary search queries to gather information from the web that the base model doesn't already know.

Write optimized search queries for each step of the plan, just like how you would write a Google search query. Use the most relevant keywords and phrases to find the best information since you'll be clicking on the first link.

Step-by-Step Plan:
{{ step_by_step_plan }}

Only respond in the following JSON format:

```
{
    "queries": [
        "<QUERY 1>",
        "<QUERY 2>"
    ],
    "ask_user": "<ASK INPUT FROM USER>"
}
```
~~~
# Example Queries

This file contains example queries that can be used to test a code-researching AI agent.
Keywords for Search Query: {{ contextual_keywords }}
~~~
# Example Queries

Example "queries": ["How to do Bing Search via API in Python", "Claude API Documentation Python"]
Example "ask_user": ["Can you please provide API Keys for Claude, OpenAI, and Firebase?"]
Example Query:["How to implement user authentication using Passport.js in a MEAN stack application?"]

Example Query:["Integrate Stripe payment gateway into a MERN stack e-commerce application"]

Example Query:["Set up WebSocket communication with Socket.io in a LAMP stack chat application"]
Example Query:["Implement role-based access control using Laravel for a React and MySQL application"]

Example Query: ["Integrate Algolia for search functionality in a MEVN stack blog application"]

Example Query: ["Implement file upload functionality using multer in a Django and Angular application"]

Example Query: ["Build a GraphQL API with Apollo Server and MongoDB for a Vue.js frontend"]

Example Query: ["Add Google Places autocomplete to a full-stack travel planning application built with Flask and React"]

Example Query: ["Implement OAuth2 authentication with Firebase in a full-stack recipe sharing app"]

Example Query: ["Set up continuous integration with GitLab CI for a full-stack application deployed on Heroku"]

Example "ask_user": ["Please provide API keys or access tokens for the following services: Stripe, Algolia, and Firebase."]

Example Query: ["How to implement user authentication with JWT in a MERN stack application?"]

Example Query: ["Integrate PayPal checkout into a MEAN stack e-commerce app"]

Example Query: ["Set up real-time messaging with Socket.io in a full-stack chat application"]

Example Query: ["Implement role-based access control in a LAMP stack web application"]

Example Query: ["Integrate Elasticsearch for search functionality in a full-stack blog application"]

Example Query: ["Implement file upload functionality using Multer in a Django and React application"]

Example Query: ["Build a RESTful API with Express and MongoDB for a Vue.js frontend"]

Example Query: ["Add Google Maps integration to a full-stack travel planning application"]

Example Query: ["Implement GraphQL for data querying in a full-stack recipe sharing app"]

Example Query: ["Set up CI/CD pipeline with Jenkins for a full-stack application deployed on AWS"]

Example "ask_user": ["Can you provide API keys or access tokens for the following services: PayPal, Google Maps, and Elasticsearch?"]
This file contains example queries that can be used to test a code-researching AI agent.

~~~

Rules:
- Only search for a maximum of 3 queries.
- Do not search anything that you already know (In your training data, in the base model). For example: You already know how to write a Python flask web server, it is in your data, so you shouldn't search how to do that.
- Do not search for information that is not relevant to the task at hand.
- Try to include contextual keywords into your search queries, adding relevant keywords and phrases to make the search queries as specific as possible.
- Only search for documentation, do not search basic how tos. Forbidden Queries: How to install XYZ, How to setup ABC, etc.
- Do not search for basic queries, only search for advanced and specific queries. You are allowed to leave the "queries" field empty if no search queries are needed for the step.
- DO NOT EVER SEARCH FOR BASIC QUERIES. ONLY SEARCH FOR ADVANCED QUERIES.
- YOU ARE ALLOWED TO LEAVE THE "queries" FIELD EMPTY IF NO SEARCH QUERIES ARE NEEDED FOR THE STEP.

Remember to only make search queries for resources that might require external information (like Documentation or a Blog or an Article). If the information is already known to you or commonly known, there is no need to search for it.

The `queries` key and the `ask_user` key can be empty list and string respectively if no search queries or user input are needed for the step. Try to keep the number of search queries to a minimum to save context window. One query per subject.

Only search for documentation or articles that are relevant to the task at hand. Do not search for general information.

Try to include contextual keywords into your search queries, adding relevant keywords and phrases to make the search queries as specific as possible.

Only the provided JSON response format is accepted. Any other response format will be rejected.